services:
  es:
    build:
      context: .
      args:
        VERSION: 8.13.4
    container_name: es
    environment:
      - node.name=single-node
      - cluster.name=backtony
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - es-bridge

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
      ELASTICSEARCH_SSL_VERIFICATIONMODE: none
    ports:
      - 5601:5601
    depends_on:
      - es
    networks:
      - es-bridge

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.4
    container_name: logstash
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./logstash/config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/mysql-connector-j-8.3.0.jar:/usr/share/logstash/mysql-connector-j-8.3.0.jar
    depends_on:
      - es
      - mysql
    networks:
      - es-bridge

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    networks:
      - es-bridge
    volumes:
      - mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - es-bridge

networks:
  es-bridge:
    driver: bridge

volumes:
  mysql-data:
